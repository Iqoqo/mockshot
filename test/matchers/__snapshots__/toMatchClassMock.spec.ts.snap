// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`toMatchMock Should igone fields within an array: [mockshot] [ClassSnap] [[HelloWorld complexArray complexArray1]] 1`] = `
{
  "className": "HelloWorld",
  "methodName": "complexArray",
  "mock": {
    "data": [
      {
        "id": 123
      },
      {
        "id": 567
      }
    ]
  },
  "mockName": "complexArray1"
}
`;

exports[`toMatchMock Should igone fields within an array: [mockshot] [ClassSnap] [[HelloWorld complexArray complexArray2]] 1`] = `
{
  "className": "HelloWorld",
  "methodName": "complexArray",
  "mock": {
    "data": {
      "level1": [
        {
          "id": 123
        },
        {
          "id": 456
        }
      ]
    }
  },
  "mockName": "complexArray2"
}
`;

exports[`toMatchMock Should igone fields within an array: [mockshot] [ClassSnap] [[HelloWorld complexArray complexArray3]] 1`] = `
{
  "className": "HelloWorld",
  "methodName": "complexArray",
  "mock": {
    "data": [
      {
        "level1": [
          {
            "id": 123
          },
          {
            "id": 456
          }
        ]
      },
      {
        "level1": [
          {
            "id": 789
          }
        ]
      }
    ]
  },
  "mockName": "complexArray3"
}
`;

exports[`toMatchMock Should match a default parameter: [mockshot] [ClassSnap] [[HelloWorld foo default-param]] 1`] = `
{
  "className": "HelloWorld",
  "methodName": "foo",
  "mock": "unknown",
  "mockName": "default-param"
}
`;

exports[`toMatchMock Should match mock with ignoredKeyPaths: [mockshot] [ClassSnap] [[HelloWorld bar success]] 1`] = `
{
  "className": "HelloWorld",
  "methodName": "bar",
  "mock": {
    "data": {
      "_id": "1234"
    },
    "id": "1234sddd56",
    "some": "value"
  },
  "mockName": "success"
}
`;

exports[`toMatchMock Should return correct schema: [mockshot] [ClassSnap] [[HelloWorld foo success]] 1`] = `
{
  "className": "HelloWorld",
  "methodName": "foo",
  "mock": {
    "foo": "barr"
  },
  "mockName": "success"
}
`;
